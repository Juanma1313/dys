"id","Title","Body","Created At","Updated At","Labels","milestone","State"
"41","EPIC: View DIY Projects","As a **user**, I can **access the published DIY Projects**, so that **I can follow their instructions and replicate them**

### User Stories
#19 
#20 
#21 
","2024-04-02 07:17:02+00:00","2024-04-02 07:19:11+00:00","[Label(name=""epic"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"40","USER STORY: Register users as Content Creators","As **Administrator**, I can **Give privileges to users to became Content Creators**, so that **This content creators can handle DIY projects**
---

## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am an administrator
	**When** a user is designed as Content Creator
	**Then** I can assign this user to the Content Creator user group
- Acceptance Criteria 2
	**Given** that I am an administrator
	**When** a user is no longer designed as Content Creator
	**Then** I can revoke their Content Creator user privileges
- Acceptance Criteria 3
	**Given** that I am a Content Creator
	**When** I want to create/modify/delete a DIY Project
	**Then** I have sufficient privileges to perform those tasks

## Tasks
- [x] Task 1 Create ` Content Creators` users group
- [x] Task 2 Assign sufficient privileges to the ` Content Creators` users group
- [x] Task 3 Assign designated users to the ` Content Creators` users group

## Story Points:
1+1+1
## Epic:  
#37
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)


","2024-04-02 06:59:17+00:00","2024-04-10 14:13:17+00:00","[Label(name=""must have""), Label(name=""3"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"39","EPIC: DIY Project creation and management","As a **content creator**, I can **add/modify/delete DIY projects**, so that **the DIY Projects can be published and access by users in the website**

### User Stories
#40
#23 
#24
#25 
#26 
#27 
#28 
#29 
#30 
#31 
#32 
#33 
#34","2024-04-02 06:10:08+00:00","2024-04-02 07:04:38+00:00","[Label(name=""must have""), Label(name=""epic"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"38","EPIC: User registration","As a **user**, I can **register myself on the website**, so that **hold my information about the website  **

### Stories
#12
#13 
#14 
#15 
#16 
#17
#18 
#22
","2024-04-01 12:56:09+00:00","2024-04-02 07:07:05+00:00","[Label(name=""must have""), Label(name=""epic"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"37","EPIC: Setup initial development environment","As a **developer**, I can **setup initial environment**, so that **The website can be developed**

###Stories
#36 
#17
","2024-04-01 12:44:10+00:00","2024-04-02 07:02:29+00:00","[Label(name=""must have""), Label(name=""epic"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"36","USER STORY: Create Development Environment","As **developer**, I can **setup the development environment**, so that **I can start developing the website**

- [x] Task 1 – Install Visual Studio Code in local environment
- [x] Task 2 – Create website Github repository and start remote environment
- [x] Task 3 – Install Django and all required libraries for runtime and development of the website
- [x] Task 4 – Create Django project and application
- [x] Task 5 - Create database in ElepantSQL servers
- [x] Task 6 - Create media storage in Cloudinary servers
- [x] Task 7 – create env.py and add all security risk keys
- [x] Task 8 - Migrate Django project to use the new database and media storage
- [x] Task 9 - Setup Heroku service for the website
- [x]  Task 10 – Setup automatic deployment from Github on Heroku servers 

Iteration:  [DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)
Points: https://github.com/Juanma1313/dys/labels/8
Epic: https://github.com/Juanma1313/dys/issues/37","2024-04-01 11:38:01+00:00","2024-04-01 12:34:41+00:00","[Label(name=""must have""), Label(name=""8"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"35","USER STORY: Sign out","As **user**, I can **sign out**, so that **I can leave the website with security and I am no longer registered as connected **
","2024-03-28 04:26:10+00:00","2024-04-10 14:09:08+00:00","[Label(name=""must have""), Label(name=""1"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"34","USER STORY: Change component published status","As **content creator**, I can **change a component published status**, so that **the component information is available to users when marked as published or hidden when it is marked as draft**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a `Creator`  user (member of the `Content Creator` group)
	**When** I have selected a component from a DIY Project
	**Then** I can toggle the published flag `Status` so that this Component from the DIY Project can be shown or hidden from viewing users.

## Tasks
- [x] Task 1 - Modify the DIY Component Admin view (`ComponentInLiner`) to update the `status` field

## Story Points:
1
## Epic:
#39 
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)
","2024-03-28 04:17:49+00:00","2024-04-10 09:18:43+00:00","[Label(name=""must have""), Label(name=""1"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"33","USER STORY: Change project Published status","As **content creator**, I can **change a project published status **, so that **the project is available to users when marked as published or hidden when it is marked as draft**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a `Creator`  user (member of the `Content Creator` group)
	**When** I have selected one or more DIY Projects from the DIY projects list
	**Then** I can toggle the published flag `Status` so that the DIY Project can be shown or hidden from viewing users.

## Tasks
- [x] Task 1 - Modify the DIY Project Admin view (`ThingAdmin`) to update the `status` field
- [x] Task 2 - Add `publish` and `set_as_draft` actions to the DIY Project Admin view

## Story Points:
2 + 3
## Epic:
#39 
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)
","2024-03-28 04:16:55+00:00","2024-04-10 09:19:12+00:00","[Label(name=""must have""), Label(name=""5"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"32","USER STORY: Delete Instructions","As **content creator**, I can **delete project instructions**, so that **those instructions do no longer exist on the website**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a `Creator`  user (member of the `Content Creator` group)
	**When** I am modifying a DIY Project (`Thing`)
	**Then** I can delete an existing Instructions element from the current DIY Project
- Acceptance Criteria 2
	**Given** that I am a `Creator` user (member of the `Content Creator` group)
	**When** I have requested to delete one or more Instructions elements
	**Then** I will have to explicitly confirm the deletion
## Tasks
Built in #25
## Story Points:
0
## Epic:
#39 
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)

","2024-03-28 04:12:57+00:00","2024-04-10 10:52:24+00:00","[Label(name=""must have""), Label(name=""0"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"31","USER STORY: Delete component","As **content creator**, I can **delete a component**, so that **the component does no longer exist on the website**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a `Creator`  user (member of the `Content Creator` group)
	**When** I am modifying a DIY Project (`Thing`)
	**Then** I can delete an existing DIY Component from the current DIY Project
- Acceptance Criteria 2
	**Given** that I am a `Creator` user (member of the `Content Creator` group)
	**When** I have requested to delete one or more DIY Components
	**Then** I will have to explicitly confirm the deletion

## Tasks
Built in #26
## Story Points:
0
## Epic:
#39 
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)

","2024-03-28 04:11:10+00:00","2024-04-10 10:53:14+00:00","[Label(name=""must have""), Label(name=""0"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"30","USER STORY: Delete a project","As **content creator**, I can **delete a DIY project**, so that **the project does no longer exist on the website**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a `Creator`  user (member of the `Content Creator` group)
	**When** I select a DIY project from the DIY Projects list in the admin website page 
	**Then** I can delete all the selected projects
- Acceptance Criteria 2
	**Given** that I am a `Creator` user (member of the `Content Creator` group)
	**When** I am modifying a DIY Project in admin website page 
	**Then** I can delete the current DIY Project 
- Acceptance Criteria 3
	**Given** that I am a `Creator` user (member of the `Content Creator` group)
	**When** I have requested to delete one or more DIY projects
	**Then** I will have to explicitly confirm the deletion

## Tasks
Built in #23
## Story Points:
0
## Epic:
#39 
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)
","2024-03-28 04:10:10+00:00","2024-04-10 10:49:27+00:00","[Label(name=""must have""), Label(name=""0"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"29","USER STORY: Modify instructions","As **content creator**, I can **modify the project instructions**, so that **the project can be corrected or upgraded**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a `Creator`  user (member of the `Content Creator` group)
	**When** I am modifying a DIY Project (`Thing`)
	**Then** I can change the title of the Instructions element
- Acceptance Criteria 2
	**Given** that I am a `Creator` user (member of the `Content Creator` group)
	**When** I am modifying a DIY Project (`Thing`)
	**Then** I can change the content of Instructions with a WSWG built-in editor
- Acceptance Criteria 
	**Given** that I am a `Creator` user (member of the `Content Creator` group)
	**When** I am modifying a DIY Project (`Thing`)
	**Then** I need to use a `Save` button to permanently store the changes in the database

## Tasks
- [x] Task 1 - Add Summernote edit functionality to the `instructions` field in DIY Instructions Admin view (`InstructionsAdmin') to allow for the WSWG edit features.
- [x] Task 2 - Add the `title` and `instructions` fields to the fieldsets in the DIY Instructions Admin view (`InstructionsAdmin`) to allow updating of these fields.
- [x] Task 3 - Add Summernote edit functionality to the `instructions` field in inline DIY Instructions Admin view (`InstructionsInLine') to allow for the WSWG edit features in the DIY Project Details Instructions list.
- [x] Task 4 - Add the `title` and `instructions` fields to the fieldsets in the inline DIY Instructions Admin view (`InstructionsInLine`) to allow updating of these fields.

## Story Points:
2+1+1+1
## Epic:
#39 
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)
","2024-03-28 04:08:29+00:00","2024-04-10 13:13:41+00:00","[Label(name=""must have""), Label(name=""5"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"28","USER STORY: Modify component","As **content creator**, I can **modify the component details**, so that **the component can be corrected or upgraded**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a `Creator`  user (member of the `Content Creator` group)
	**When** I am modifying a DIY Project (`Thing`)
	**Then** I can change the title of the Instructions element
- Acceptance Criteria 2
	**Given** that I am a `Creator` user (member of the `Content Creator` group)
	**When** I am modifying a DIY Project (`Thing`)
	**Then** I can change the content of Instructions with a WSWG built-in editor
- Acceptance Criteria 
	**Given** that I am a `Creator` user (member of the `Content Creator` group)
	**When** I am modifying a DIY Project (`Thing`)
	**Then** I need to use a `Save` button to permanently store the changes in the database

## Tasks
- built in #24
- [x] Task 1 - Add Summernote edit functionality to the `description` field in inline DIY Component Admin view (`ComponentInLine') to allow for the WSWG edit features in the DIY Component list.
- [x] Task 4 - Add the modifiable fields to the fieldsets in the inline DIY Component Admin view (`ComponentInLine`) to allow updating of these fields.

## Story Points:
2+1
## Epic:
#39 
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)
","2024-03-28 04:07:34+00:00","2024-04-10 13:31:08+00:00","[Label(name=""must have""), Label(name=""3"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"27","USER STORY: Modify a project details","As **content creator**, I can **modify the DIY project details**, so that **the project can be corrected or upgraded**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a `Creator`  user (member of the `Content Creator` group)
	**When** I am modifying a DIY Project (Thing)
	**Then** I can change the Title, Author, Status, and Featured Image
- Acceptance Criteria 2
	**Given** that I am a `Creator`  user (member of the `Content Creator` group)
	**When** I am modifying a DIY Project (Thing)
	**Then** I can edit a WSWG document to the description

## Tasks
- Built in #24

## Story Points:
0
## Epic:
#39 
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)","2024-03-28 04:05:41+00:00","2024-04-10 13:39:48+00:00","[Label(name=""must have""), Label(name=""0"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"26","USER STORY: Create component","As **content creator**, I can **create a list of components**, so that **a user can view and gather the building blocks to fulfil the project**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a `Creator`  user (member of the `Content Creator` group)
	**When** I am modifying a DIY Project (`Thing`)
	**Then** I can create a new component that will be automatically assigned to the current DIY Project

## Tasks

- [x] Task 1 -  Modify the DIY Project object model 'Thing' to include a relation to itself as `components` 
- [x] Task 1 - Create the DIY Component Admin view (`ComponentInLine`) to handle new components as a list.
- [x] Task 2 - Add inline admin view `ComponentInLine` to the DIY Component Admin view (`ComponentInLine`) to allow new components to be added as a list.

## Story Points:
1+2+2
## Epic:
#39 
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)
","2024-03-28 04:02:48+00:00","2024-04-10 10:00:35+00:00","[Label(name=""must have""), Label(name=""5"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"25","USER STORY: Create Instructions","As **content creator**, I can **create a list of project instructions**, so that **the users can read and follow them**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a `Creator`  user (member of the `Content Creator` group)
	**When** I am modifying a DIY Project (`Thing`)
	**Then** I can create a new `instructions`  element that will be automatically assigned to the current DIY Project

## Tasks
- [x] Task 1 - Create the DIY Instructions class model (`Instructions`) that will be used to instantiate each `instructions` object
- [x] Task 2 - Modify the DIY Project object model 'Thing' to include the instructions model
- [x] Task 2 - Create the DIY Component Admin view (`InstructionsInLine`) to handle new instructions elements as a list.
- [x] Task 3 - Add inline admin view `InstructionsInLine` to the DIY Project Admin view (`ThingAdmin`) to allow new instructions elements to be added as a list.

## Story Points:
1+1+2+1
## Epic:
#39 
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)
","2024-03-28 03:57:02+00:00","2024-04-10 09:54:20+00:00","[Label(name=""must have""), Label(name=""5"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"24","USER STORY: Create DIY project details","As **content creator**, I can **create the DIY project details**, so that **project can have a featured image and description**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a `Creator`  user (member of the `Content Creator` group)
	**When** I have created a new DIY Project (`Thing`)
	**Then** I can assign a Title, Author, Status, and Featured Image
- Acceptance Criteria 2
	**Given** that I am a `Creator`  user (member of the `Content Creator` group)
	**When** I have created a new DIY Project (`Thing`)
	**Then** I can edit a WSWG document to the description
- Acceptance Criteria 3
	**Given** that I am a `Creator`  user (member of the `Content Creator` group)
	**When** I have created a new DIY Project (`Thing`)
	**Then** Slug field should be assign/updated automatically.
- Acceptance Criteria 4
	**Given** that I am a `Creator`  user (member of the `Content Creator` group)
	**When** I have created a new DIY Project (`Thing`)
	**Then** I need to use a Save button to permanently store the changes in the database

## Tasks
- [x] Task 1 - Install Django Summernote extension for adding embedded WSWG editing functionality.
- [x] Task 2 - Modify the DIY Project Admin view (`ThingAdmin`) to accommodate all detail fields
- [x] Task 3 - Add the modifiable fields to the fieldsets in the DIY Project Admin view (`ThingAdmin`) to allow updating of these fields. 

## Story Points:
3 + 5
## Epic:
#39 
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)","2024-03-28 03:52:39+00:00","2024-04-10 13:45:46+00:00","[Label(name=""must have""), Label(name=""8"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"23","USER STORY: Create a DIY project","As **content creator**, I can **Create a DIY project**, so that **I can publish it and share it on the website**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a `Creator`  user (member of the `Content Creator` group)
	**When** I am in any website page 
	**Then** I can access the admin web page selecting the `Admin` option in the user menu
- Acceptance Criteria 2
	**Given** that I am a `Creator` user (member of the `Content Creator` group)
	**When** I am in admin website page 
	**Then** I can create a new DIY Project 
- Acceptance Criteria 3
	**Given** that I am a `Creator` user (member of the `Content Creator` group)
	**When** I have created a new DIY Project
	**Then** The Created date, Modified_Date and Parent fields are automatically created for this DIY project

## Tasks
- [x] Task 1 - Allow the `Admin` option menu in the user menu in the base template for Staff users (from group `Content Creators`)
- [x] Task 2 - Create at least one user from the `Content Creator` user group and the `Staff` flag enabled
- [x] Task 3 - Create the DIY Project object model (`Thing`) that will be used to instantiate each `Thing` and each `Component`
- [x] Task 4 - Create the Admin view for the DIY Project (`ThingAdmin`)

## Story Points:
1 + 1 + 6
## Epic:
#39 
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)","2024-03-28 03:38:45+00:00","2024-04-10 13:47:23+00:00","[Label(name=""must have""), Label(name=""8"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"22","USER STORY: Mark a project as favourite","As **a registered user**, I can **mark a project as favourite**, so that **I can keep a collection of favourite projects and the projects get rated**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a signed-in user 
	**When** I am viewing a DIY Project details
	**Then** I can click on the favourite icon to toggle the current DIY Project as favourite for me.

## Tasks
- [x] Task 1 - Modify the DIY Project class model to handle DIY likes.
- [x] Task 2 - Create the Django view and controllers to handle DIY likes
- [x] Task 3 - Modify DIY Project detail template to handle DIY likes

## Story Points:
2+2+1
## Epic:
#41
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)","2024-03-28 03:35:54+00:00","2024-04-10 10:08:04+00:00","[Label(name=""must have""), Label(name=""5"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"21","USER STORY: View Components","As **user**, I can **select and view a project component**, so that **I can access the details of the component**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a user 
	**When** in the DIY Project details webpage, and selecting a component from the components list
	**Then** if the component is also a DIY Project, I get redirected to this DIY Project detail website page

## Tasks
- [x] Task 3 - In the DIY Project details template, add a link to its DIY project detail for all the components related to the DIY Project and are DIY Projects themselves.

## Story Points:
3
## Epic:
#41
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)","2024-03-28 03:31:10+00:00","2024-04-05 15:53:12+00:00","[Label(name=""must have""), Label(name=""3"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"20","USER STORY: View details of a DIY project","As **user**, I can **Access the details of the selected DIY project**, so that **I can view the components and the instructions**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a user 
	**When** I am redirected to the DIY Project details website page
	**Then** I can view the DIY Project's Title, featured image, author, Published date, Description, number of components, number of Instructions, Number of likes, the components list and the Instructions list
- Acceptance Criteria 2
	**Given** that I am a user 
	**When** viewing the components list
	**Then** I can see each component's title, featured image, and description
- Acceptance Criteria 3
	**Given** that I am a user 
	**When** viewing the instructions list
	**Then** I can see each instruction's title, and its content

## Tasks
- [x] Task 1 - Create the Django view and controllers to handle DIY details
- [x] Task 2 - Create a template for the DIY Project details
- [x] Task 3 - Add to the details template a presentation header with all the DIY Project details
- [x] Task 4 - Add to the details template a list of the components related to the DIY Project 
- [x] Task 5 - Add to the details template a list of the instructions related to the DIY Project 

## Story Points:
1+1+1+3+2
## Epic:
#41
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)","2024-03-28 03:24:27+00:00","2024-04-10 10:06:36+00:00","[Label(name=""must have""), Label(name=""8"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"19","USER STORY: View list of published projects","As **user**, I can **view a list of published projects**, so that **I can choose what projects to view in detail**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a user 
	**When** I am in any website page 
	**Then** I can access the website home page clicking on the website logo or brand name
- Acceptance Criteria 2
	**Given** that I am a user 
	**When** I am in the home website page 
	**Then** I can view the list of all the published DIY Projects 
- Acceptance Criteria 3
	**Given** The list of all the published DIY Projects is displayed
	**When** each DIY project is displayed
	**Then** The Title, featured pictured, author, published date and number of likes should be displayed
- Acceptance Criteria 4
	**Given** that I am a user
	**When** I select a DIY Projects from the DIY Project list 
	**Then** I get redirected to the selected DIY Project details webpage

## Tasks
- [x] Task 1 - Add a paginated list of DIY Published projects to the index template 

## Story Points:
5
## Epic:
#41
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)","2024-03-28 03:19:47+00:00","2024-04-04 10:29:20+00:00","[Label(name=""must have""), Label(name=""5"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"18","USER STORY: Reset/Change password","As **user**, I can **Reset and change my own password**, so that **I can recover my account if I forget my password or enforce security to my account**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am in the sign-in webpage
	**When** following the link `Forgot your password?'
	**Then** I get redirected to the Password/reset webpage
- Acceptance Criteria 2
	**Given** that I am in the Password/reset webpage
	**When** I fill my user e-mail address and use the `Reset My Password` button
	**Then** a password reset e-mail is sent to the e-mail address
	**Then** we will be redirected to a webpage with instructions on how to reset the password.
- Acceptance Criteria 3
	**Given** that I am a Registered user that has received a password reset e-mail
	**When** I follow the link contained in the password reset e-mail
	**Then** I will be redirected to the change password webpage
- Acceptance Criteria 4
	**Given** that I am a Registered user that has been redirected to the change password webpage
	**When** I fill in a valid password
	**Then** The account password will be changed to the new password
	**Then** I will be redirected to the change password done webpage

## Tasks
- [x] Task 1 - Adapt Django's allauth accounts application to allow user password reset.

## Story Points:
1
## Epic:
#38
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)","2024-03-28 03:14:10+00:00","2024-04-04 09:06:41+00:00","[Label(name=""must have""), Label(name=""1"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"17","USER STORY: Administrate users","As **Administrator**, I can **Create/modify/delete user accounts and their privileges**, so that **I can assign who signs in on the website and who can create or modify content**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am an `Administrator`  user
	**When** I am in any website page 
	**Then** I can access the admin web page selecting the `Admin` option in the user menu
- Acceptance Criteria 2
	**Given** that I am an `Administrator`  user
	**When** I am in admin website page 
	**Then** I can add/delete/modify any user
- Acceptance Criteria 2
	**Given** that I am an `Administrator`  user
	**When** I am in admin website page 
	**Then** I can add/delete/modify any user group
- Acceptance Criteria 2
	**Given** that I am an `Administrator`  user
	**When** I am in admin website page 
	**Then** I can add/delete/modify any privilege of any user and any group
- Acceptance Criteria 3
	**Given** that I am an `Administrator`  user
	**When** I am in admin website page 
	**Then** I can add/delete/modify any privilege of any user and any group

## Tasks
- [x] Task 1 - Install and setup Django's allauth  and its accounts and interfaces, extensions.
- [x] Task 2 - Create at least one administrator account
- [x] Task 3 - Customize allauth templates to the website base template
- [x] Task 4 - Create `Content Creators` user group with necessary privileges for content creators

## Story Points:
3 + 1 + 3 + 1
## Epic:
#37
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)","2024-03-28 03:08:24+00:00","2024-04-10 10:03:22+00:00","[Label(name=""must have""), Label(name=""8"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"16","USER STORY: Delete own account","As **user**, I can **Delete my own account**, so that **I can erase my information from the website**
","2024-03-28 02:59:35+00:00","2024-04-10 14:14:49+00:00","[Label(name=""could have"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"15","USER STORY: Change e-mail","As **user**, I can **change my own e-mail address**, so that **I can sign in on the website with new e-mail address**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a `Registered`  user
	**When** I am in any website page 
	**Then** I can access the E-mail web page selecting the `E-mail` option in the user menu
- Acceptance Criteria 2
	**Given** that I am in the e-mail webpage
	**When** I fill the email field with a valid e-mail address and use the button `Add Email`
	**Then** The e-mail address is added to user's list of addresses 
- Acceptance Criteria 3
	**Given** that I am in the e-mail webpage and I have more than one e-mail addresses
	**When** I select an e-mail address from the list and use the button `Make Primary`
	**Then** The selected e-mail address will be the new `Primary` that will be used for sign-in

## Tasks
- [x] Task 1 - Adapt Django's allauth accounts application to allow users to manage their e-mail addresses.

## Story Points:
1
## Epic:
#38
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)","2024-03-28 02:57:11+00:00","2024-04-02 09:42:11+00:00","[Label(name=""must have""), Label(name=""1"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"14","USER STORY: Sign in","As **user**, I can **sign on the website**, so that **I can mark my favourite content**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a `Registered` user not logged in
	**When** I am in any website page 
	**Then** I can access the sign-in web page selecting the `sign in` option in the user menu
- Acceptance Criteria 2
	**Given** that I am a `Registered` user not logged in
	**When** I am in the home page 
	**Then** I can access the sign-in web page following the `join us ...` link
- Acceptance Criteria 3
	**Given** that I am in the sign-in webpage
	**When** I have entered a valid e-mail address and a valid password
	**Then** I become logged in the website
	**Then** The user menu button should contain my username
- Acceptance Criteria 4
	**Given** that I am a user not logged in
	**When** I am in any website page 
	**Then** The user menu button should contain `Anonymous`

## Tasks
- [x] Task 1 - Adapt Django's allauth accounts application to allow user sign-in via email.
- [x] Task 2 - Create the `sign in` option menu in the user menu in the base template

## Story Points:
2 + 1
## Epic:
#38
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)","2024-03-28 02:54:48+00:00","2024-04-02 09:27:18+00:00","[Label(name=""must have""), Label(name=""3"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"13","USER STORY: Validate e-mail","As **user**, I can **validate my own e-mail**, so that **I can sign in the website**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am a new `Registered` user
	**When** I have created an account using the sign-up webpage
	**Then** an e-mail validation is sent to the new account e-mail address
	**Then** we will be redirected to a webpage with instructions on how to verify the e-mail Address.
- Acceptance Criteria 2
	**Given** that I am a new `Registered` user that has received an e-mail verification e-mail
	**When** I follow the link contained in the e-mail verification e-mail
	**Then** I will be directed to the `confirm-Email` webpage
- Acceptance Criteria 3
	**Given** that I am a new `Registered` user redirected to the `confirm-Email` webpage
	**When** I click the confirm button
	**Then** the e-mail is confirmed 
	**Then** I am redirected to the sign-in webpage

## Tasks
- [x] Task 1 - Create an e-mail account for Django's automated e-mail (on Gmail, Yahoo, etc)
- [x] Task 1 - Adapt Django's allauth accounts application to allow e-mail validation.

## Story Points:
2 + 1
## Epic:
#38
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)","2024-03-28 02:52:55+00:00","2024-04-02 09:15:13+00:00","[Label(name=""must have""), Label(name=""3"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
"12","USER STORY: Register an account","As **anonymous user**, I can **register myself**, so that **I can select my favourite content**
---
## Acceptance Criteria
- Acceptance Criteria 1
	**Given** that I am an `Anonymous` user (non registered)
	**When** I am in the sign-in website page 
	**Then** I can access the sign-up page following the `sign up` link
- Acceptance Criteria 2
	**Given** that I am an `Anonymous` user (non registered)
	**When** I am in any website page 
	**Then** I can access the sign-up page selecting the sin-up option in the user menu
- Acceptance Criteria 3
	**Given** that I am a non  `Anonymous` user (user already registered)
	**When** I am in the home page 
	**Then** the `join us ...` link should not be available
- Acceptance Criteria 4
	**Given** that I am in the sign-up webpage
	**When** I have entered a valid e-mail address and a valid password
	**Then** The new account is created

## Tasks
- [x] Task 1 - Adapt Django's allauth accounts application to allow user registration via email.
- [x] Task 2 - Create the sign-up option menu in the user menu in the base template

## Story Points:
2 + 1
## Epic:
#38
## Iteration:
[DIY Site Backlog](https://github.com/Juanma1313/dys/milestone/1)","2024-03-28 02:51:18+00:00","2024-04-02 09:14:18+00:00","[Label(name=""must have""), Label(name=""3"")]","Milestone(title=""DIY Site Backlog"", number=1)","open"
